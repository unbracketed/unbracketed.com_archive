[{"pk": 1, "model": "projects.project", "fields": {"description": "<p>Just as you use kindling to start a fire, this project aims to provide the sticks and the fuel to get you started with Django projects in a manner that will reduce headaches as your project grows.\nKindling can be seen as a sort of replacement for the django-admin startproject command and an enhancement to the built-in set of commands.</p>\n<div class=\"section\" id=\"goals\">\n<h1>Goals</h1>\n<p>Some of the problems this project may attempt to solve:</p>\n<ul class=\"simple\">\n<li>Roll the creation of an isolated environment (virtualenv), dependency installation (pip), and site initialization into one step.</li>\n<li>Minimize the effort needed to create sites that are already configured with popular community apps and tools out-of-box.</li>\n<li>Make it easy to reuse your site in different roles. How about a one-step continuous integration server for example?</li>\n<li>Include commands that capture common workflow scenarios in Django development.</li>\n<li>Detect and install missing required dependencies during environment updates.</li>\n<li>Easily gather software distribution license inventory for all of your dependencies.</li>\n<li>Provide automatic deployment scaffolding using Fabric. Your site should be able to set itself up once you tell it where to go.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"philosophy\">\n<h1>Philosophy</h1>\n<p>There is a desire to maintain a balance between providing a cohesive toolset that works well with minimal fuss while not trying to force the consumer into a rigid set of site configurations.</p>\n</div>\n<div class=\"section\" id=\"status\">\n<h1>Status</h1>\n<p>This is still in braindump phase and things will be in flux for a bit. I'm just learning and it seems that the world of Python package management\nleaves much to be desired so I anticipate that many of my ideas will BURN. But if you think you understand the direction I'm going, I'd be grateful for any tips from the trenches.</p>\n</div>\n<div class=\"section\" id=\"inspiration\">\n<h1>Inspiration</h1>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"http://github.com/lincolnloop/django-best-practices/tree/master\">django-best-practices</a></li>\n<li><a class=\"reference external\" href=\"http://pypi.python.org/pypi/virtualenvwrapper\">virtualenvwrapper</a></li>\n<li>All the times I've burned more than 10 minutes because of a silly packaging issue.</li>\n</ul>\n</div>\n", "tease": "Tools for creating, managing, and deploying Django sites in a consistent and repeatable manner.", "description_raw": "===============\r\nDJANGO-KINDLING\r\n===============\r\n\r\nJust as you use kindling to start a fire, this project aims to provide the sticks and the fuel to get you started with Django projects in a manner that will reduce headaches as your project grows.\r\nKindling can be seen as a sort of replacement for the django-admin startproject command and an enhancement to the built-in set of commands.\r\n\r\nGoals\r\n-----\r\n\r\nSome of the problems this project may attempt to solve:\r\n\r\n- Roll the creation of an isolated environment (virtualenv), dependency installation (pip), and site initialization into one step.\r\n- Minimize the effort needed to create sites that are already configured with popular community apps and tools out-of-box.\r\n- Make it easy to reuse your site in different roles. How about a one-step continuous integration server for example?\r\n- Include commands that capture common workflow scenarios in Django development.\r\n- Detect and install missing required dependencies during environment updates.\r\n- Easily gather software distribution license inventory for all of your dependencies.\r\n- Provide automatic deployment scaffolding using Fabric. Your site should be able to set itself up once you tell it where to go.\r\n\r\nPhilosophy\r\n----------\r\nThere is a desire to maintain a balance between providing a cohesive toolset that works well with minimal fuss while not trying to force the consumer into a rigid set of site configurations.\r\n\r\n\r\nStatus\r\n------\r\n\r\nThis is still in braindump phase and things will be in flux for a bit. I'm just learning and it seems that the world of Python package management\r\nleaves much to be desired so I anticipate that many of my ideas will BURN. But if you think you understand the direction I'm going, I'd be grateful for any tips from the trenches.\r\n    \r\nInspiration\r\n-----------\r\n\r\n- django-best-practices_\r\n- virtualenvwrapper_\r\n- All the times I've burned more than 10 minutes because of a silly packaging issue.\r\n\r\n.. _django-best-practices: http://github.com/lincolnloop/django-best-practices/tree/master\r\n.. _virtualenvwrapper: http://pypi.python.org/pypi/virtualenvwrapper", "repository_url": "http://github.com/unbracketed/django-kindling/tree/master", "slug": "django-kindling", "name": "django-kindling"}}, {"pk": 2, "model": "projects.project", "fields": {"description": "<p>Currently provides two services:</p>\n<ul class=\"simple\">\n<li>Random quotes from the movie</li>\n<li>A haiku generator</li>\n</ul>\n", "tease": "It really ties your site together", "description_raw": "Currently provides two services:\r\n\r\n* Random quotes from the movie\r\n* A haiku generator", "repository_url": "http://github.com/unbracketed/lebowski", "slug": "lebowski", "name": "lebowski"}}, {"pk": 3, "model": "projects.project", "fields": {"description": "", "tease": "Possibly including, but not limited to, packages, extensions, macros, commands, and snippets for potentially simplifying Django development within Komodo Edit or Komodo ", "description_raw": "", "repository_url": "http://github.com/unbracketed/django-komodo-kit", "slug": "django-komodo-kit", "name": "django-komodo-kit"}}]
